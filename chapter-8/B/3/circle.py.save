#Code by GVV Sharma (works on termux)
#March 7, 2022
#License
#https://www.gnu.org/licenses/gpl-3.0.en.html
#To draw a circle with a tangent and chord subtending an angle at the centre


#Python libraries for math and graphics
import numpy as np
import mpmath as mp
import matplotlib.pyplot as plt
from numpy import linalg as LA

import sys                                          #for path to external scripts
sys.path.insert(0,'/home/hari/hari/circles/CoordGeo')         #path to my scripts

#local imports
from line.funcs import *
from triangle.funcs import *
from conics.funcs import circ_gen
from conics.funcs import *

#if using termux
import subprocess
import shlex
#end if


I =  np.eye(2)
e1 =  I[:,0]
#Input parameters

#Circle parameters
r1 = 2
r2 = 2.5*r1
O = np.zeros(2)
C =  np.array(([r1,r1])) #normal vector
X =  np.array(([r1,0]))
Y =  np.array(([0,r1]))
A = np.array(([4*r1,0]))
B = np.array(([0,3*r1]))
P = np.array(([2*r1,1.5*r1]))
M = np.array(([3.2,3.6]))

##Generating the line 
x_AO = line_gen(A,O)
x_BA = line_gen(B,A)

##Generating the circle
x_circ= circ_gen(O,r1)
x_circ= circ_gen(O,r2)


#Plotting all lines
plt.plot(x_AO[0,:],x_AO[1,:],label='$AO$')
plt.plot(x_BA[0,:],x_BA[1,:],label='$BA$')

#Plotting the circle
plt.plot(x_circ[0,:],x_circ[1,:],label='Circle1')
plt.plot(x_circ[0,:],x_circ[1,:],label='Circle2')


#Labeling the coordinates
#plt.scatter(tri_coords[0,:], tri_coords[1,:])

#for i, txt in enumerate(vert_labels):
 #   plt.annotate(txt, # this is the text
  #               textcoords="offset points", # how to position the text
   #              xytext=(0,10), # distance from text to points (x,y)
    #             ha='center') # horizontal alignment can be left, right or center

plt.xlabel('$x$')
plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid() # minor
plt.axis('equal')

#if using termux
#plt.savefig('/storage/emulated/0/github/cbse-papers/2020/math/10/solutions/figs/matrix-10-20.pdf')
#subprocess.run(shlex.split("termux-open /storage/emulated/0/github/school/ncert-vectors/defs/figs/cbse-10-20.pdf"))
#else
plt.show()

